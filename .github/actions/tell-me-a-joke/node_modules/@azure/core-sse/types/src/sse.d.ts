/**
 * Represents a message sent in an event stream
 * https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format
 */
export interface EventMessage {
    /** The event ID to set the EventSource object's last event ID value. */
    id: string;
    /** A string identifying the type of event described. */
    event: string;
    /** The event data */
    data: string;
    /** The reconnection interval (in milliseconds) to wait before retrying the connection */
    retry?: number;
}
/**
 * Processes a response stream into a stream of events.
 * @param chunkIter - A stream of Uint8Array chunks
 * @returns An async iterable of EventMessage objects
 */
export declare function iterateSseStream(chunkIter: ReadableStream<Uint8Array>): AsyncIterable<EventMessage>;
/**
 * Processes a response stream into a stream of events.
 * @param chunkIter - An async iterable of Uint8Array chunks
 * @returns An async iterable of EventMessage objects
 */
export declare function iterateSseStream(chunkIter: AsyncIterable<Uint8Array>): AsyncIterable<EventMessage>;
//# sourceMappingURL=sse.d.ts.map