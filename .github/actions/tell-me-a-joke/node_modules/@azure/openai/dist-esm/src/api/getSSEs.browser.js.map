{"version":3,"file":"getSSEs.browser.js","sourceRoot":"","sources":["../../../src/api/getSSEs.browser.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAWlC,OAAO,EAAgB,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACjE,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAEtC,MAAM,CAAC,KAAK,UAAU,OAAO,CAC3B,QAAmC;IAEnC,MAAM,IAAI,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,CAAC;IACvC,OAAO,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAChC,CAAC;AAED,KAAK,UAAU,SAAS,CACtB,QAAqC;IAErC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,MAAM,QAAQ,CAAC,eAAe,EAAE,CAAC;IAC1D,IAAI,MAAM,KAAK,KAAK,IAAI,IAAI,KAAK,SAAS,EAAE;QAC1C,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,IAAI,CAAC,CAAC;QACtC,MAAM,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,6BAA6B,CAAC,CAAC;KAC9E;IACD,IAAI,CAAC,IAAI;QAAE,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;IAC7F,OAAO,IAAI,CAAC;AACd,CAAC;AAED,KAAK,UAAU,YAAY,CAAC,MAAkC;IAC5D,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;IAClC,MAAM,OAAO,GAAiB,EAAE,CAAC;IACjC,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAI;QACF,iDAAiD;QACjD,OAAO,IAAI,EAAE;YACX,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;YAC5C,IAAI,IAAI,EAAE;gBACR,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;aACjE;YACD,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC;YACvB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrB;KACF;YAAS;QACR,MAAM,CAAC,WAAW,EAAE,CAAC;KACtB;AACH,CAAC;AAED,SAAS,gBAAgB,CAAC,OAAqB;IAC7C,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AAC7D,CAAC;AAED,SAAS,aAAa,CAAC,OAAqB,EAAE,GAAY;IACxD,MAAM,MAAM,GAAG,GAAG,aAAH,GAAG,cAAH,GAAG,GAAI,gBAAgB,CAAC,OAAO,CAAC,CAAC;IAChD,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;IACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAChD,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC1B,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACrB,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC;KACtB;IACD,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport { StreamableMethod } from \"@azure-rest/core-client\";\nimport { EventMessage, iterateSseStream } from \"@azure/core-sse\";\nimport { wrapError } from \"./util.js\";\n\nexport async function getSSEs(\n  response: StreamableMethod<unknown>\n): Promise<AsyncIterable<EventMessage>> {\n  const iter = await getStream(response);\n  return iterateSseStream(iter);\n}\n\nasync function getStream<TResponse>(\n  response: StreamableMethod<TResponse>\n): Promise<ReadableStream<Uint8Array>> {\n  const { body, status } = await response.asBrowserStream();\n  if (status !== \"200\" && body !== undefined) {\n    const text = await streamToText(body);\n    throw wrapError(() => JSON.parse(text).error, \"Error parsing response body\");\n  }\n  if (!body) throw new Error(\"No stream found in response. Did you enable the stream option?\");\n  return body;\n}\n\nasync function streamToText(stream: ReadableStream<Uint8Array>): Promise<string> {\n  const reader = stream.getReader();\n  const buffers: Uint8Array[] = [];\n  let length = 0;\n  try {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return new TextDecoder().decode(concatBuffers(buffers, length));\n      }\n      length += value.length;\n      buffers.push(value);\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nfunction getBuffersLength(buffers: Uint8Array[]): number {\n  return buffers.reduce((acc, curr) => acc + curr.length, 0);\n}\n\nfunction concatBuffers(buffers: Uint8Array[], len?: number): Uint8Array {\n  const length = len ?? getBuffersLength(buffers);\n  const res = new Uint8Array(length);\n  for (let i = 0, pos = 0; i < buffers.length; i++) {\n    const buffer = buffers[i];\n    res.set(buffer, pos);\n    pos += buffer.length;\n  }\n  return res;\n}\n"]}