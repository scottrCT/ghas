{"version":3,"file":"oaiSse.js","sourceRoot":"","sources":["../../../src/api/oaiSse.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;;AAWlC,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AACvC,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAC;AAEtC,MAAM,UAAiB,UAAU,CAC/B,QAAmC,EACnC,OAA6C;;;QAE7C,MAAM,MAAM,GAAG,cAAM,OAAO,CAAC,QAAQ,CAAC,CAAA,CAAC;QACvC,IAAI,MAAM,GAAG,KAAK,CAAC;;YACnB,KAA0B,eAAA,WAAA,cAAA,MAAM,CAAA,YAAA,qFAAE;gBAAR,sBAAM;gBAAN,WAAM;gBAArB,MAAM,KAAK,KAAA,CAAA;gBACpB,IAAI,MAAM,EAAE;oBACV,sDAAsD;oBACtD,8BAA8B;oBAC9B,SAAS;iBACV;qBAAM,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;oBAClC,MAAM,GAAG,IAAI,CAAC;iBACf;qBAAM;oBACL,oBAAM,OAAO,CACX,SAAS,CACP,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAC5B,sDAAsD,CACvD,CACF,CAAA,CAAC;iBACH;aACF;;;;;;;;;IACH,CAAC;CAAA","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport { StreamableMethod } from \"@azure-rest/core-client\";\nimport { getSSEs } from \"./getSSEs.js\";\nimport { wrapError } from \"./util.js\";\n\nexport async function* getOaiSSEs<TEvent>(\n  response: StreamableMethod<unknown>,\n  toEvent: (obj: Record<string, any>) => TEvent\n): AsyncIterable<TEvent> {\n  const stream = await getSSEs(response);\n  let isDone = false;\n  for await (const event of stream) {\n    if (isDone) {\n      // handle a case where the service sends excess stream\n      // data after the [DONE] event\n      continue;\n    } else if (event.data === \"[DONE]\") {\n      isDone = true;\n    } else {\n      yield toEvent(\n        wrapError(\n          () => JSON.parse(event.data),\n          \"Error parsing an event. See 'cause' for more details\"\n        )\n      );\n    }\n  }\n}\n"]}