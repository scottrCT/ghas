{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../src/api/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport { StreamableMethod, operationOptionsToRequestParameters } from \"@azure-rest/core-client\";\nimport {\n  ChatCompletions,\n  ChatMessage,\n  Completions,\n  Embeddings,\n  ImageGenerations,\n  ImageLocation,\n} from \"../models/models.js\";\nimport {\n  GetChatCompletionsOptions as GeneratedGetChatCompletionsOptions,\n  GetChatCompletionsWithAzureExtensionsOptions,\n  GetCompletionsOptions,\n  GetEmbeddingsOptions,\n  ImageGenerationOptions,\n} from \"../models/options.js\";\nimport {\n  BeginAzureBatchImageGeneration202Response,\n  BeginAzureBatchImageGenerationDefaultResponse,\n  BeginAzureBatchImageGenerationLogicalResponse,\n  ChatMessage as GeneratedChatMessage,\n  OpenAIContext as Client,\n  GetChatCompletions200Response,\n  GetChatCompletionsDefaultResponse,\n  GetChatCompletionsWithAzureExtensions200Response,\n  GetChatCompletionsWithAzureExtensionsDefaultResponse,\n  GetCompletions200Response,\n  GetCompletionsDefaultResponse,\n  GetEmbeddings200Response,\n  GetEmbeddingsDefaultResponse,\n  ImageGenerationsOutput,\n  ImagePayloadOutput,\n  getLongRunningPoller,\n  isUnexpected,\n} from \"../rest/index.js\";\nimport { getChatCompletionsResult, getCompletionsResult } from \"./deserializers.js\";\nimport { getOaiSSEs } from \"./oaiSse.js\";\nimport { GetChatCompletionsOptions } from \"./models.js\";\nimport {\n  AudioResult,\n  AudioResultFormat,\n  AudioResultSimpleJson,\n  GetAudioTranscriptionOptions,\n  GetAudioTranslationOptions,\n} from \"../models/audio.js\";\nimport { createFile } from \"./policies/formDataPolicy.js\";\nimport { renameKeysToCamelCase } from \"./util.js\";\n\nexport function _getEmbeddingsSend(\n  context: Client,\n  input: string[],\n  deploymentId: string,\n  options: GetEmbeddingsOptions = { requestOptions: {} }\n): StreamableMethod<GetEmbeddings200Response | GetEmbeddingsDefaultResponse> {\n  return context.path(\"/deployments/{deploymentId}/embeddings\", deploymentId).post({\n    ...operationOptionsToRequestParameters(options),\n    body: { user: options?.user, model: options?.model, input: input },\n  });\n}\n\nexport async function _getEmbeddingsDeserialize(\n  result: GetEmbeddings200Response | GetEmbeddingsDefaultResponse\n): Promise<Embeddings> {\n  if (isUnexpected(result)) {\n    throw result.body.error;\n  }\n\n  return {\n    data: (result.body[\"data\"] ?? []).map((p) => ({\n      embedding: p[\"embedding\"],\n      index: p[\"index\"],\n    })),\n    usage: {\n      promptTokens: result.body.usage[\"prompt_tokens\"],\n      totalTokens: result.body.usage[\"total_tokens\"],\n    },\n  };\n}\n\n/** Return the embeddings for a given prompt. */\nexport async function getEmbeddings(\n  context: Client,\n  input: string[],\n  deploymentId: string,\n  options: GetEmbeddingsOptions = { requestOptions: {} }\n): Promise<Embeddings> {\n  const result = await _getEmbeddingsSend(context, input, deploymentId, options);\n  return _getEmbeddingsDeserialize(result);\n}\n\nexport function _getCompletionsSend(\n  context: Client,\n  prompt: string[],\n  deploymentId: string,\n  options: GetCompletionsOptions = { requestOptions: {} }\n): StreamableMethod<GetCompletions200Response | GetCompletionsDefaultResponse> {\n  return context.path(\"/deployments/{deploymentId}/completions\", deploymentId).post({\n    ...operationOptionsToRequestParameters(options),\n    body: {\n      prompt: prompt,\n      max_tokens: options?.maxTokens,\n      temperature: options?.temperature,\n      top_p: options?.topP,\n      logit_bias: options?.logitBias,\n      user: options?.user,\n      n: options?.n,\n      logprobs: options?.logprobs,\n      echo: options?.echo,\n      stop: options?.stop,\n      presence_penalty: options?.presencePenalty,\n      frequency_penalty: options?.frequencyPenalty,\n      best_of: options?.bestOf,\n      stream: options?.stream,\n      model: options?.model,\n    },\n  });\n}\n\nexport async function _getCompletionsDeserialize(\n  result: GetCompletions200Response | GetCompletionsDefaultResponse\n): Promise<Completions> {\n  if (isUnexpected(result)) {\n    throw result.body.error;\n  }\n\n  return {\n    id: result.body[\"id\"],\n    created: new Date(result.body[\"created\"]),\n    promptFilterResults: (result.body[\"prompt_annotations\"] ?? []).map((p) => ({\n      promptIndex: p[\"prompt_index\"],\n      contentFilterResults: !p.content_filter_results\n        ? undefined\n        : {\n            sexual: !p.content_filter_results?.sexual\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.sexual?.[\"severity\"],\n                  filtered: p.content_filter_results?.sexual?.[\"filtered\"],\n                },\n            violence: !p.content_filter_results?.violence\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.violence?.[\"severity\"],\n                  filtered: p.content_filter_results?.violence?.[\"filtered\"],\n                },\n            hate: !p.content_filter_results?.hate\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.hate?.[\"severity\"],\n                  filtered: p.content_filter_results?.hate?.[\"filtered\"],\n                },\n            selfHarm: !p.content_filter_results?.self_harm\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.self_harm?.[\"severity\"],\n                  filtered: p.content_filter_results?.self_harm?.[\"filtered\"],\n                },\n          },\n    })),\n    choices: (result.body[\"choices\"] ?? []).map((p) => ({\n      text: p[\"text\"],\n      index: p[\"index\"],\n      contentFilterResults: !p.content_filter_results\n        ? undefined\n        : {\n            sexual: !p.content_filter_results?.sexual\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.sexual?.[\"severity\"],\n                  filtered: p.content_filter_results?.sexual?.[\"filtered\"],\n                },\n            violence: !p.content_filter_results?.violence\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.violence?.[\"severity\"],\n                  filtered: p.content_filter_results?.violence?.[\"filtered\"],\n                },\n            hate: !p.content_filter_results?.hate\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.hate?.[\"severity\"],\n                  filtered: p.content_filter_results?.hate?.[\"filtered\"],\n                },\n            selfHarm: !p.content_filter_results?.self_harm\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.self_harm?.[\"severity\"],\n                  filtered: p.content_filter_results?.self_harm?.[\"filtered\"],\n                },\n          },\n      logprobs:\n        p.logprobs === null\n          ? null\n          : {\n              tokens: p.logprobs[\"tokens\"],\n              tokenLogprobs: p.logprobs[\"token_logprobs\"],\n              topLogprobs: p.logprobs[\"top_logprobs\"],\n              textOffset: p.logprobs[\"text_offset\"],\n            },\n      finishReason: p[\"finish_reason\"],\n    })),\n    usage: {\n      completionTokens: result.body.usage[\"completion_tokens\"],\n      promptTokens: result.body.usage[\"prompt_tokens\"],\n      totalTokens: result.body.usage[\"total_tokens\"],\n    },\n  };\n}\n\n/**\n * Gets completions for the provided input prompts.\n * Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n * provided prompt data.\n */\nexport async function getCompletions(\n  context: Client,\n  prompt: string[],\n  deploymentId: string,\n  options: GetCompletionsOptions = { requestOptions: {} }\n): Promise<Completions> {\n  const result = await _getCompletionsSend(context, prompt, deploymentId, options);\n  return _getCompletionsDeserialize(result);\n}\n\nexport function _getChatCompletionsSend(\n  context: Client,\n  messages: ChatMessage[],\n  deploymentId: string,\n  options: GeneratedGetChatCompletionsOptions = { requestOptions: {} }\n): StreamableMethod<GetChatCompletions200Response | GetChatCompletionsDefaultResponse> {\n  return context.path(\"/deployments/{deploymentId}/chat/completions\", deploymentId).post({\n    ...operationOptionsToRequestParameters(options),\n    body: {\n      messages: parseChatMessage(messages),\n      functions: options?.functions,\n      function_call: options?.functionCall,\n      max_tokens: options?.maxTokens,\n      temperature: options?.temperature,\n      top_p: options?.topP,\n      logit_bias: options?.logitBias,\n      user: options?.user,\n      n: options?.n,\n      stop: options?.stop,\n      presence_penalty: options?.presencePenalty,\n      frequency_penalty: options?.frequencyPenalty,\n      stream: options?.stream,\n      model: options?.model,\n      dataSources: options?.dataSources,\n    },\n  });\n}\n\nexport async function _getChatCompletionsDeserialize(\n  result: GetChatCompletions200Response | GetChatCompletionsDefaultResponse\n): Promise<ChatCompletions> {\n  if (isUnexpected(result)) {\n    throw result.body.error;\n  }\n\n  return {\n    id: result.body[\"id\"],\n    created: new Date(result.body[\"created\"]),\n    choices: (result.body[\"choices\"] ?? []).map((p) => ({\n      message: !p.message ? undefined : (p.message as any),\n      index: p[\"index\"],\n      finishReason: p[\"finish_reason\"],\n      delta: !p.delta\n        ? undefined\n        : {\n            role: p.delta?.[\"role\"],\n            content: p.delta?.[\"content\"],\n            name: p.delta?.[\"name\"],\n            functionCall: !p.delta?.function_call\n              ? undefined\n              : {\n                  name: p.delta?.function_call?.[\"name\"],\n                  arguments: p.delta?.function_call?.[\"arguments\"],\n                },\n            context: !p.delta?.context\n              ? undefined\n              : {\n                  messages: !p.delta?.context?.messages\n                    ? undefined\n                    : (p.delta?.context?.messages as any),\n                },\n          },\n      contentFilterResults: !p.content_filter_results\n        ? undefined\n        : {\n            sexual: !p.content_filter_results?.sexual\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.sexual?.[\"severity\"],\n                  filtered: p.content_filter_results?.sexual?.[\"filtered\"],\n                },\n            violence: !p.content_filter_results?.violence\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.violence?.[\"severity\"],\n                  filtered: p.content_filter_results?.violence?.[\"filtered\"],\n                },\n            hate: !p.content_filter_results?.hate\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.hate?.[\"severity\"],\n                  filtered: p.content_filter_results?.hate?.[\"filtered\"],\n                },\n            selfHarm: !p.content_filter_results?.self_harm\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.self_harm?.[\"severity\"],\n                  filtered: p.content_filter_results?.self_harm?.[\"filtered\"],\n                },\n          },\n    })),\n    promptFilterResults: (result.body[\"prompt_annotations\"] ?? []).map((p) => ({\n      promptIndex: p[\"prompt_index\"],\n      contentFilterResults: !p.content_filter_results\n        ? undefined\n        : {\n            sexual: !p.content_filter_results?.sexual\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.sexual?.[\"severity\"],\n                  filtered: p.content_filter_results?.sexual?.[\"filtered\"],\n                },\n            violence: !p.content_filter_results?.violence\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.violence?.[\"severity\"],\n                  filtered: p.content_filter_results?.violence?.[\"filtered\"],\n                },\n            hate: !p.content_filter_results?.hate\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.hate?.[\"severity\"],\n                  filtered: p.content_filter_results?.hate?.[\"filtered\"],\n                },\n            selfHarm: !p.content_filter_results?.self_harm\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.self_harm?.[\"severity\"],\n                  filtered: p.content_filter_results?.self_harm?.[\"filtered\"],\n                },\n          },\n    })),\n    usage: {\n      completionTokens: result.body.usage[\"completion_tokens\"],\n      promptTokens: result.body.usage[\"prompt_tokens\"],\n      totalTokens: result.body.usage[\"total_tokens\"],\n    },\n  };\n}\n\nexport function _getChatCompletionsWithAzureExtensionsSend(\n  context: Client,\n  messages: ChatMessage[],\n  deploymentId: string,\n  options: GetChatCompletionsWithAzureExtensionsOptions = { requestOptions: {} }\n): StreamableMethod<\n  | GetChatCompletionsWithAzureExtensions200Response\n  | GetChatCompletionsWithAzureExtensionsDefaultResponse\n> {\n  return context\n    .path(\"/deployments/{deploymentId}/extensions/chat/completions\", deploymentId)\n    .post({\n      ...operationOptionsToRequestParameters(options),\n      body: {\n        messages: parseChatMessage(messages),\n        functions: options?.functions,\n        function_call: options?.functionCall,\n        max_tokens: options?.maxTokens,\n        temperature: options?.temperature,\n        top_p: options?.topP,\n        logit_bias: options?.logitBias,\n        user: options?.user,\n        n: options?.n,\n        stop: options?.stop,\n        presence_penalty: options?.presencePenalty,\n        frequency_penalty: options?.frequencyPenalty,\n        stream: options?.stream,\n        model: options?.model,\n        dataSources: options?.dataSources,\n      },\n    });\n}\n\nexport async function _getChatCompletionsWithAzureExtensionsDeserialize(\n  result:\n    | GetChatCompletionsWithAzureExtensions200Response\n    | GetChatCompletionsWithAzureExtensionsDefaultResponse\n): Promise<ChatCompletions> {\n  if (isUnexpected(result)) {\n    throw result.body.error;\n  }\n\n  return {\n    id: result.body[\"id\"],\n    created: new Date(result.body[\"created\"]),\n    choices: (result.body[\"choices\"] ?? []).map((p) => ({\n      message: !p.message ? undefined : (p.message as any),\n      index: p[\"index\"],\n      finishReason: p[\"finish_reason\"],\n      delta: !p.delta\n        ? undefined\n        : {\n            role: p.delta?.[\"role\"],\n            content: p.delta?.[\"content\"],\n            name: p.delta?.[\"name\"],\n            functionCall: !p.delta?.function_call\n              ? undefined\n              : {\n                  name: p.delta?.function_call?.[\"name\"],\n                  arguments: p.delta?.function_call?.[\"arguments\"],\n                },\n            context: !p.delta?.context\n              ? undefined\n              : {\n                  messages: !p.delta?.context?.messages\n                    ? undefined\n                    : (p.delta?.context?.messages as any),\n                },\n          },\n      contentFilterResults: !p.content_filter_results\n        ? undefined\n        : {\n            sexual: !p.content_filter_results?.sexual\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.sexual?.[\"severity\"],\n                  filtered: p.content_filter_results?.sexual?.[\"filtered\"],\n                },\n            violence: !p.content_filter_results?.violence\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.violence?.[\"severity\"],\n                  filtered: p.content_filter_results?.violence?.[\"filtered\"],\n                },\n            hate: !p.content_filter_results?.hate\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.hate?.[\"severity\"],\n                  filtered: p.content_filter_results?.hate?.[\"filtered\"],\n                },\n            selfHarm: !p.content_filter_results?.self_harm\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.self_harm?.[\"severity\"],\n                  filtered: p.content_filter_results?.self_harm?.[\"filtered\"],\n                },\n          },\n    })),\n    promptFilterResults: (result.body[\"prompt_annotations\"] ?? []).map((p) => ({\n      promptIndex: p[\"prompt_index\"],\n      contentFilterResults: !p.content_filter_results\n        ? undefined\n        : {\n            sexual: !p.content_filter_results?.sexual\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.sexual?.[\"severity\"],\n                  filtered: p.content_filter_results?.sexual?.[\"filtered\"],\n                },\n            violence: !p.content_filter_results?.violence\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.violence?.[\"severity\"],\n                  filtered: p.content_filter_results?.violence?.[\"filtered\"],\n                },\n            hate: !p.content_filter_results?.hate\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.hate?.[\"severity\"],\n                  filtered: p.content_filter_results?.hate?.[\"filtered\"],\n                },\n            selfHarm: !p.content_filter_results?.self_harm\n              ? undefined\n              : {\n                  severity: p.content_filter_results?.self_harm?.[\"severity\"],\n                  filtered: p.content_filter_results?.self_harm?.[\"filtered\"],\n                },\n          },\n    })),\n    usage: {\n      completionTokens: result.body.usage[\"completion_tokens\"],\n      promptTokens: result.body.usage[\"prompt_tokens\"],\n      totalTokens: result.body.usage[\"total_tokens\"],\n    },\n  };\n}\n\n/**\n * Gets chat completions for the provided chat messages.\n * This is an Azure-specific version of chat completions that supports integration with configured data sources and\n * other augmentations to the base chat completions capabilities.\n */\nexport async function getChatCompletionsWithAzureExtensions(\n  context: Client,\n  messages: ChatMessage[],\n  deploymentId: string,\n  options: GetChatCompletionsWithAzureExtensionsOptions = { requestOptions: {} }\n): Promise<ChatCompletions> {\n  const result = await _getChatCompletionsWithAzureExtensionsSend(\n    context,\n    messages,\n    deploymentId,\n    options\n  );\n  return _getChatCompletionsWithAzureExtensionsDeserialize(result);\n}\n\nexport function _beginAzureBatchImageGenerationSend(\n  context: Client,\n  prompt: string,\n  options: ImageGenerationOptions = { requestOptions: {} }\n): StreamableMethod<\n  | BeginAzureBatchImageGeneration202Response\n  | BeginAzureBatchImageGenerationDefaultResponse\n  | BeginAzureBatchImageGenerationLogicalResponse\n> {\n  return context.path(\"/images/generations:submit\").post({\n    ...operationOptionsToRequestParameters(options),\n    body: {\n      prompt: prompt,\n      n: options?.n,\n      size: options?.size,\n      response_format: options?.responseFormat,\n      user: options?.user,\n    },\n  });\n}\n\nexport function listCompletions(\n  context: Client,\n  prompt: string[],\n  deploymentName: string,\n  options: GetCompletionsOptions = { requestOptions: {} }\n): AsyncIterable<Omit<Completions, \"usage\">> {\n  const response = _getCompletionsSend(context, prompt, deploymentName, {\n    ...options,\n    stream: true,\n  });\n  return getOaiSSEs(response, getCompletionsResult);\n}\n\nexport async function getImages(\n  context: Client,\n  prompt: string,\n  options: ImageGenerationOptions = { requestOptions: {} }\n): Promise<ImageGenerations> {\n  const response = await _beginAzureBatchImageGenerationSend(context, prompt, options);\n  if (isUnexpected(response)) {\n    // Check for response from OpenAI\n    const body = response.body as unknown as ImageGenerations;\n    if (body.created && body.data) {\n      return body;\n    }\n    throw response.body.error;\n  }\n\n  if (response.status === \"202\") {\n    const poller = await getLongRunningPoller(\n      context,\n      response as BeginAzureBatchImageGeneration202Response\n    );\n    const result = await poller.pollUntilDone();\n    return getImageResultsDeserialize(result);\n  } else {\n    return getImageResultsDeserialize(response);\n  }\n}\n\nexport function listChatCompletions(\n  context: Client,\n  messages: ChatMessage[],\n  deploymentName: string,\n  options: GetChatCompletionsOptions = { requestOptions: {} }\n): AsyncIterable<ChatCompletions> {\n  const response = _getChatCompletionsSendX(context, messages, deploymentName, {\n    ...options,\n    stream: true,\n  });\n  return getOaiSSEs(response, getChatCompletionsResult);\n}\n\n/**\n * Gets chat completions for the provided chat messages.\n * Completions support a wide variety of tasks and generate text that continues from or \"completes\"\n * provided prompt data.\n */\nexport async function getChatCompletions(\n  context: Client,\n  messages: ChatMessage[],\n  deploymentId: string,\n  options: GetChatCompletionsOptions = { requestOptions: {} }\n): Promise<ChatCompletions> {\n  const result = await _getChatCompletionsSendX(context, messages, deploymentId, options);\n  if (isUnexpected(result)) {\n    throw result.body.error;\n  }\n  return getChatCompletionsResult(result.body);\n}\n\nfunction convertResultTypes({ created, data }: ImageGenerationsOutput): ImageGenerations {\n  if (typeof (data[0] as ImageLocation).url === \"string\") {\n    return {\n      created: new Date(created),\n      data: data as ImageLocation[],\n    };\n  } else {\n    return {\n      created: new Date(created),\n      data: data.map((item) => {\n        return {\n          base64Data: (item as ImagePayloadOutput).b64_json,\n        };\n      }),\n    };\n  }\n}\n\nfunction getImageResultsDeserialize(\n  response:\n    | BeginAzureBatchImageGeneration202Response\n    | BeginAzureBatchImageGenerationDefaultResponse\n    | BeginAzureBatchImageGenerationLogicalResponse\n): ImageGenerations {\n  if (isUnexpected(response) || !response.body.result) {\n    throw response.body.error;\n  }\n\n  const result = response.body.result;\n  return convertResultTypes(result);\n}\n\nfunction _getChatCompletionsSendX(\n  context: Client,\n  messages: ChatMessage[],\n  deploymentName: string,\n  options: GetChatCompletionsOptions = { requestOptions: {} }\n): StreamableMethod<\n  | GetChatCompletionsWithAzureExtensions200Response\n  | GetChatCompletionsWithAzureExtensionsDefaultResponse\n> {\n  return options.azureExtensionOptions?.extensions\n    ? _getChatCompletionsWithAzureExtensionsSend(context, messages, deploymentName, {\n        ...options,\n        dataSources: options.azureExtensionOptions?.extensions,\n      })\n    : _getChatCompletionsSend(context, messages, deploymentName, options);\n}\n\n/**\n * Returns the translation of an audio file.\n * @param context - The context containing the client to use for this request.\n * @param deploymentName - The name of the model deployment (when using Azure OpenAI) or model name (when using non-Azure OpenAI) to use for this request.\n * @param fileContent - The content of the audio file to translate.\n * @param options - The options for this audio translation request.\n * @returns The audio translation result.\n */\nexport async function getAudioTranslation(\n  context: Client,\n  deploymentName: string,\n  fileContent: Uint8Array,\n  options?: GetAudioTranslationOptions\n): Promise<AudioResultSimpleJson>;\n/**\n * Returns the translation of an audio file.\n * @param context - The context containing the client to use for this request.\n * @param deploymentName - The name of the model deployment (when using Azure OpenAI) or model name (when using non-Azure OpenAI) to use for this request.\n * @param fileContent - The content of the audio file to translate.\n * @param format - The format of the result object. See {@link AudioResultFormat} for possible values.\n * @param options - The options for this audio translation request.\n * @returns The audio translation result.\n */\nexport async function getAudioTranslation<Format extends AudioResultFormat>(\n  context: Client,\n  deploymentName: string,\n  fileContent: Uint8Array,\n  format: Format,\n  options?: GetAudioTranslationOptions\n): Promise<AudioResult<Format>>;\n// implementation\nexport async function getAudioTranslation<Format extends AudioResultFormat>(\n  context: Client,\n  deploymentName: string,\n  fileContent: Uint8Array,\n  formatOrOptions?: Format | GetAudioTranslationOptions,\n  inputOptions?: GetAudioTranslationOptions\n): Promise<AudioResult<Format>> {\n  const options =\n    inputOptions ?? (typeof formatOrOptions === \"string\" ? {} : formatOrOptions ?? {});\n  const response_format = typeof formatOrOptions === \"string\" ? formatOrOptions : undefined;\n  const { temperature, prompt, model, ...rest } = options;\n  const { body, status } = await context\n    .pathUnchecked(\"deployments/{deploymentId}/audio/translations\", deploymentName)\n    .post({\n      body: {\n        file: await createFile(fileContent),\n        ...(response_format && { response_format }),\n        ...(temperature !== undefined ? { temperature } : {}),\n        ...(prompt && { prompt }),\n        ...(model && { model }),\n      },\n      ...rest,\n      contentType: \"multipart/form-data\",\n    });\n  if (status !== \"200\") {\n    throw body.error;\n  }\n  return response_format !== \"verbose_json\"\n    ? body\n    : (renameKeysToCamelCase(body) as AudioResult<Format>);\n}\n\n/**\n * Returns the transcription of an audio file in a simple JSON format.\n * @param context - The context containing the client to use for this request.\n * @param deploymentName - The name of the model deployment (when using Azure OpenAI) or model name (when using non-Azure OpenAI) to use for this request.\n * @param fileContent - The content of the audio file to transcribe.\n * @param options - The options for this audio transcription request.\n * @returns The audio transcription result in a simple JSON format.\n */\nexport async function getAudioTranscription(\n  context: Client,\n  deploymentName: string,\n  fileContent: Uint8Array,\n  options?: GetAudioTranscriptionOptions\n): Promise<AudioResultSimpleJson>;\n/**\n * Returns the transcription of an audio file.\n * @param context - The context containing the client to use for this request.\n * @param deploymentName - The name of the model deployment (when using Azure OpenAI) or model name (when using non-Azure OpenAI) to use for this request.\n * @param fileContent - The content of the audio file to transcribe.\n * @param format - The format of the result object. See {@link AudioResultFormat} for possible values.\n * @param options - The options for this audio transcription request.\n * @returns The audio transcription result in a format of your choice.\n */\nexport async function getAudioTranscription<Format extends AudioResultFormat>(\n  context: Client,\n  deploymentName: string,\n  fileContent: Uint8Array,\n  format: Format,\n  options?: GetAudioTranscriptionOptions\n): Promise<AudioResult<Format>>;\n// implementation\nexport async function getAudioTranscription<Format extends AudioResultFormat>(\n  context: Client,\n  deploymentName: string,\n  fileContent: Uint8Array,\n  formatOrOptions?: Format | GetAudioTranscriptionOptions,\n  inputOptions?: GetAudioTranscriptionOptions\n): Promise<AudioResult<Format>> {\n  const options =\n    inputOptions ?? (typeof formatOrOptions === \"string\" ? {} : formatOrOptions ?? {});\n  const response_format = typeof formatOrOptions === \"string\" ? formatOrOptions : undefined;\n  const { temperature, language, prompt, model, ...rest } = options;\n  const { body, status } = await context\n    .pathUnchecked(\"deployments/{deploymentId}/audio/transcriptions\", deploymentName)\n    .post({\n      body: {\n        file: await createFile(fileContent),\n        ...(response_format && { response_format }),\n        ...(language && { language }),\n        ...(temperature !== undefined ? { temperature } : {}),\n        ...(prompt && { prompt }),\n        ...(model && { model }),\n      },\n      ...rest,\n      contentType: \"multipart/form-data\",\n    });\n  if (status !== \"200\") {\n    throw body.error;\n  }\n  return response_format !== \"verbose_json\"\n    ? body\n    : (renameKeysToCamelCase(body) as AudioResult<Format>);\n}\n\nfunction parseChatMessage(messages: ChatMessage[]): GeneratedChatMessage[] {\n  return messages.map((p: ChatMessage) => ({\n    role: p.role,\n    content: p.content ?? null,\n    name: p.name,\n    function_call: p.functionCall,\n    context: p.context,\n  }));\n}\n"]}